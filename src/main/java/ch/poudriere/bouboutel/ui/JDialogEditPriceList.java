/*
 * JFrameEditPerformance.java
 *
 * Created on October 11, 2005, 7:52 AM
 */
package ch.poudriere.bouboutel.ui;

import ch.poudriere.bouboutel.bundles.I18n;
import ch.poudriere.bouboutel.models.BookingSystem;
import ch.poudriere.bouboutel.models.ModelList;
import ch.poudriere.bouboutel.models.Price;
import ch.poudriere.bouboutel.models.PriceList;
import ch.poudriere.bouboutel.ui.models.DataTableModel;
import ch.poudriere.bouboutel.ui.models.TableCellRendererManager;
import java.awt.Component;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author sdperret
 */
public class JDialogEditPriceList extends javax.swing.JDialog {
    private final BookingSystem bookingSystem;
    private ModelList<Price> prices = new ModelList<>();
    private final DataTableModel<Price> pricesTableModel;

    public JDialogEditPriceList(JDialog parent, PriceList priceList,
            boolean newPriceList) {
        super(parent, true);
        bookingSystem = BookingSystem.getInstance();
        this.priceList = priceList;
        this.newPriceList = newPriceList;

        for (Price p : priceList.getPrices()) {
            prices.add(p.clone());
        }

        initComponents();

        actionsCombo = new JComboBox();
        actionsCombo.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(
                    JList list, Object value, int index, boolean isSelected,
                    boolean cellHasFocus) {
                setText(I18n.get(
                        "enum.price.action.%s".formatted((Price.Action) value)));
                return this;
            }
        });
        actionsCombo.addItem(Price.Action.BOOKING);
        actionsCombo.addItem(Price.Action.TICKET);
        pricesTableModel = new DataTableModel(
                prices, Price.class, "action", "title", "price",
                "validityComment");
        pricesTable.setModel(pricesTableModel);
        pricesTable.getSelectionModel().setSelectionMode(
                ListSelectionModel.SINGLE_SELECTION);
        TableCellRendererManager.setAsDefault(pricesTable);
        pricesTable.setDefaultEditor(Price.Action.class, new DefaultCellEditor(
                actionsCombo));
        pricesTable.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);

        pricesTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        pricesTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        pricesTable.getColumnModel().getColumn(2).setPreferredWidth(10);
        pricesTable.getColumnModel().getColumn(3).setPreferredWidth(300);

        nameTextField.setText(priceList.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        pricesTable = new javax.swing.JTable();
        buttonsPanel = new javax.swing.JPanel();
        jButtonCancel = new javax.swing.JButton();
        jButtonOK = new javax.swing.JButton();
        tarifsButtonsPanel = new javax.swing.JPanel();
        jButtonAddPrice = new javax.swing.JButton();
        upButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        jButtonDeletePrice = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Performance");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText(I18n.get("label.name" )); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 5);
        getContentPane().add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 10);
        getContentPane().add(nameTextField, gridBagConstraints);

        jLabel2.setText("Prix");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        getContentPane().add(jLabel2, gridBagConstraints);

        jScrollPane1.setMaximumSize(new java.awt.Dimension(32000, 303));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(800, 303));

        jPanel1.setLayout(new java.awt.BorderLayout());
        jPanel1.add(pricesTable, java.awt.BorderLayout.CENTER);

        jScrollPane1.setViewportView(jPanel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jButtonCancel.setText(I18n.get("buttonCancel")); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        buttonsPanel.add(jButtonCancel);

        jButtonOK.setText(I18n.get("buttonOK")); // NOI18N
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        buttonsPanel.add(jButtonOK);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(buttonsPanel, gridBagConstraints);

        tarifsButtonsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 10));

        jButtonAddPrice.setText(I18n.get("button.new")); // NOI18N
        jButtonAddPrice.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAddPrice.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAddPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPriceActionPerformed(evt);
            }
        });
        tarifsButtonsPanel.add(jButtonAddPrice);

        upButton.setText("↑");
        upButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        upButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });
        tarifsButtonsPanel.add(upButton);

        downButton.setText("↓");
        downButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        downButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });
        tarifsButtonsPanel.add(downButton);

        jButtonDeletePrice.setText(I18n.get("button.delete")); // NOI18N
        jButtonDeletePrice.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonDeletePrice.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonDeletePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletePriceActionPerformed(evt);
            }
        });
        tarifsButtonsPanel.add(jButtonDeletePrice);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        getContentPane().add(tarifsButtonsPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeletePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletePriceActionPerformed
        int row = pricesTable.getSelectedRow();
        if (row > -1) {
            int index = pricesTable.convertRowIndexToModel(row);
            prices.remove(pricesTableModel.getRowModel(index).getId());
            pricesTableModel.fireTableDataChanged();
        }
    }//GEN-LAST:event_jButtonDeletePriceActionPerformed

    private void jButtonAddPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPriceActionPerformed
        prices.add(new Price());
        pricesTableModel.fireTableDataChanged();
    }//GEN-LAST:event_jButtonAddPriceActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed

        try {
            priceList.setPrices(prices);
        } catch (IOException ex) {
            Logger.getLogger(JDialogEditPriceList.class.getName()).log(
                    Level.SEVERE, null, ex);
        }

        priceList.setName(nameTextField.getText());

        if (newPriceList) {
            bookingSystem.getPriceLists().add(priceList);
        }

        dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        int row = pricesTable.getSelectedRow();
        
        if (row > -1 && row < pricesTableModel.getRowCount() - 1) {
            ModelList<Price> nps = new ModelList<>();
            int index = pricesTable.convertRowIndexToModel(row);
            Long npid =  pricesTableModel.getRowModel(index + 1).getId();
            Price mp =  prices.remove(pricesTableModel.getRowModel(index).getId());
           
            for (Price p : prices) {
                if (p.getId().equals(npid)) {
                    nps.add(new Price(
                        p.getAction(), p.getTitle(), p.getPrice(), p.getValidityComment()));
                    nps.add(new Price(
                        mp.getAction(), mp.getTitle(), mp.getPrice(), mp.getValidityComment()));
                } else {
                    nps.add(new Price(
                        p.getAction(), p.getTitle(), p.getPrice(), p.getValidityComment()));
                }  
            }
            prices.clear();
            prices.addAll(nps);
            pricesTableModel.fireTableDataChanged();
            pricesTable.getSelectionModel().setSelectionInterval(index + 1, index + 1);
        }
    }//GEN-LAST:event_downButtonActionPerformed

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        int row = pricesTable.getSelectedRow();
        
        if (row > 0) {
            ModelList<Price> nps = new ModelList<>();
            int index = pricesTable.convertRowIndexToModel(row);
            Long ppid =  pricesTableModel.getRowModel(index - 1).getId();
            Price mp =  prices.remove(pricesTableModel.getRowModel(index).getId());
           
            for (Price p : prices) {
                if (p.getId().equals(ppid)) {
                    nps.add(new Price(
                        mp.getAction(), mp.getTitle(), mp.getPrice(), mp.getValidityComment()));
                    nps.add(new Price(
                        p.getAction(), p.getTitle(), p.getPrice(), p.getValidityComment()));
                } else {
                    nps.add(new Price(
                        p.getAction(), p.getTitle(), p.getPrice(), p.getValidityComment()));
                }  
            }
            prices.clear();
            prices.addAll(nps);
            pricesTableModel.fireTableDataChanged();
            pricesTable.getSelectionModel().setSelectionInterval(index - 1, index - 1);
        }
    }//GEN-LAST:event_upButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton downButton;
    private javax.swing.JButton jButtonAddPrice;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDeletePrice;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTable pricesTable;
    private javax.swing.JPanel tarifsButtonsPanel;
    private javax.swing.JButton upButton;
    // End of variables declaration//GEN-END:variables
    private PriceList priceList;
    private boolean newPriceList;
    private JComboBox actionsCombo;
}
