/*
 * JDialogEditPersons.java
 *
 * Created on October 31, 2005, 11:45 AM
 */
package ch.poudriere.bouboutel.ui;

import ch.poudriere.bouboutel.bundles.I18n;
import ch.poudriere.bouboutel.exceptions.BackupAccessException;
import ch.poudriere.bouboutel.files.BookingFile;
import ch.poudriere.bouboutel.models.Booking;
import ch.poudriere.bouboutel.models.BookingSystem;
import ch.poudriere.bouboutel.models.Show;
import ch.poudriere.bouboutel.ui.models.DataTableModel;
import ch.poudriere.bouboutel.ui.models.DataTableModelColumn;
import ch.poudriere.bouboutel.ui.models.TableCellRendererManager;
import ch.poudriere.bouboutel.utils.Preferences;
import freemarker.template.TemplateException;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author sdperret
 */
public class JDialogEditPersons extends javax.swing.JDialog {
    private final BookingSystem bookingSystem;
    private final DataTableModel<Booking> bookingsTableModel;

    public JDialogEditPersons(JFrame parent) {
        super(parent, true);
        this.bookingSystem = BookingSystem.getInstance();

        initComponents();

        bookingsTableModel = new DataTableModel(
                bookingSystem.
                        getAllBookings(Preferences.isShowOldPerformances()),
                Booking.class,
                "customerName", "nbSeats", "show", "pdate", "comment", "date");
        bookingsTableModel.setColumn(new DataTableModelColumn<>(
                "show", Show.class,
                (Booking b) -> b.getPerformance().getShow()));
        bookingsTableModel.setColumn(new DataTableModelColumn<>(
                "pdate", LocalDateTime.class,
                (Booking b) -> b.getPerformance().getDate()));
        bookingsTableModel.setEditable(false);
        bookingsTable.setModel(bookingsTableModel);
        bookingsTable.getSelectionModel().setSelectionMode(
                ListSelectionModel.SINGLE_SELECTION);
        TableCellRendererManager.setAsDefault(bookingsTable, (int row) -> {
            Booking b = bookingsTableModel.getRowModel(
                    bookingsTable.convertRowIndexToModel(row));
            if (b.getComment().equals("INVITATION")) {
                return Color.LIGHT_GRAY;
            }
            return Color.BLACK;
        });
        bookingsTable.getColumnModel().getColumn(0).setPreferredWidth(160);
        bookingsTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        bookingsTable.getColumnModel().getColumn(4).setPreferredWidth(120);
        bookingsTable.getColumnModel().getColumn(5).setPreferredWidth(120);
        bookingsTable.getColumnModel().getColumn(5).setHeaderValue(
                "Date r√©servation");

        TableRowSorter<DataTableModel> bookingsSorter
                = new TableRowSorter<>(bookingsTableModel);
        List bookingsSortKeys = new ArrayList();
        bookingsSortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        bookingsTable.setRowSorter(bookingsSorter);
        bookingsTable.getRowSorter().setSortKeys(bookingsSortKeys);

        searchField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                String f = searchField.getText();
                if (f != null && !f.isBlank()) {
                    bookingsSorter.setRowFilter(RowFilter.regexFilter(f.
                            toUpperCase(), 0));
                } else {
                    bookingsSorter.setRowFilter(null);
                }
            }
        });

        InputMap im = getRootPane().getInputMap(
                JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap am = getRootPane().getActionMap();
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "cancel");
        am.put("cancel", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        jButtonPrintBookings = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonEditBooking = new javax.swing.JButton();
        jButtonDeleteBooking = new javax.swing.JButton();
        jButtonMakeTickets = new javax.swing.JButton();
        bookingsPane = new javax.swing.JScrollPane();
        bookingsTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle( "ch/poudriere/bouboutel/bundles/I18n", ch.poudriere.bouboutel.utils.Preferences.getLocale() ); // NOI18N
        setTitle(bundle.getString("labelAllBookings" )); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel4.setText("Filtrer");
        jPanel4.add(jLabel4);

        searchField.setPreferredSize(new java.awt.Dimension(150, 22));
        jPanel4.add(searchField);

        jButtonPrintBookings.setText("Imprimer la liste");
        jButtonPrintBookings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintBookingsActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonPrintBookings);

        jPanel2.add(jPanel4, java.awt.BorderLayout.WEST);

        jButtonEditBooking.setText(bundle.getString("buttonEdit" )); // NOI18N
        jButtonEditBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditBookingActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEditBooking);

        jButtonDeleteBooking.setText(bundle.getString("buttonDelete" )); // NOI18N
        jButtonDeleteBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteBookingActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonDeleteBooking);

        jButtonMakeTickets.setText(bundle.getString("buttonMakeTickets" )); // NOI18N
        jButtonMakeTickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMakeTicketsActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonMakeTickets);

        jPanel2.add(jPanel1, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        bookingsPane.setBackground(new java.awt.Color(255, 204, 204));
        bookingsPane.setName(""); // NOI18N

        bookingsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingsTableMouseClicked(evt);
            }
        });
        bookingsPane.setViewportView(bookingsTable);

        getContentPane().add(bookingsPane, java.awt.BorderLayout.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING));

        jButtonOK.setText(bundle.getString("buttonOK" )); // NOI18N
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonOK);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookingsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingsTableMouseClicked
// TODO add your handling code here:

        if (evt.getClickCount() == 2) {
            makeTickets();
        }

    }//GEN-LAST:event_bookingsTableMouseClicked

    private void jButtonEditBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditBookingActionPerformed
        int sortedSelected = bookingsTable.getSelectedRow();

        if (sortedSelected > -1) {
            int selected = bookingsTable.convertRowIndexToModel(sortedSelected);

            JDialogEditBooking toto = new JDialogEditBooking(this,
                    bookingsTableModel.getRowModel(selected));
            toto.setLocationRelativeTo(this);
            toto.setVisible(true);
            bookingsTableModel.fireTableDataChanged();
        } else {
            java.awt.Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null,
                    I18n.get("messageSelectBooking"),
                    I18n.get("errorBookingM"),
                    JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_jButtonEditBookingActionPerformed

    private void jButtonDeleteBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteBookingActionPerformed
// TODO add your handling code here:
        int sortedSelected = bookingsTable.getSelectedRow();

        if (sortedSelected > -1) {
            int selected = bookingsTable.convertRowIndexToModel(sortedSelected);
            Booking booking = bookingsTableModel.getRowModel(selected);
            try {
                booking.getPerformance().updateDataFile(booking.asData(
                        BookingFile.Command.UNBOOK));
                booking.getPerformance().getBookings().remove(booking.getId());
                bookingsTableModel.getModelList().remove(booking.getId());
                bookingsTableModel.fireTableDataChanged();
            } catch (IOException | BackupAccessException e) {
                java.awt.Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null,
                        "Could not cancel booking for " + booking.
                                getCustomerName(),
                        "System error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            java.awt.Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null,
                    I18n.get("messageSelectBooking"),
                    I18n.get("errorBookingM"),
                    JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_jButtonDeleteBookingActionPerformed

    private void jButtonMakeTicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMakeTicketsActionPerformed
        makeTickets();
    }//GEN-LAST:event_jButtonMakeTicketsActionPerformed

    private void makeTickets() {
        int sortedSelected = bookingsTable.getSelectedRow();

        if (sortedSelected > -1) {
            int selected = bookingsTable.convertRowIndexToModel(sortedSelected);
            Booking aBooking = bookingsTableModel.getModelList().getByIndex(
                    selected);

            JDialogBooking toto = new JDialogBooking(this, aBooking);
            toto.setLocationRelativeTo(this);
            toto.setVisible(true);
            bookingsTableModel.setModelList(bookingSystem.getAllBookings(
                    Preferences.isShowOldPerformances()));
            bookingsTableModel.fireTableDataChanged();
        }
    }

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonPrintBookingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintBookingsActionPerformed
        List<Booking> bookings = new LinkedList<>();
        for (int i = 0; i<bookingsTable.getRowCount(); i++) {
            bookings.add(bookingsTableModel.getRowModel(bookingsTable.convertRowIndexToModel(i)));
        }
        
        Map params = new HashMap();
        params.put("bookings", bookings);
        params.put("now", LocalDateTime.now());
        
        try {
            bookingSystem.pdfManager.print("person_bookings.ftlh", params);
        } catch (IOException | TemplateException | PrinterException ex) {
            Logger.getLogger(JDialogEditPersons.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPrintBookingsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane bookingsPane;
    private javax.swing.JTable bookingsTable;
    private javax.swing.JButton jButtonDeleteBooking;
    private javax.swing.JButton jButtonEditBooking;
    private javax.swing.JButton jButtonMakeTickets;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonPrintBookings;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables
}
