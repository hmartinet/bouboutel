/*
 * JFrameSetup.java
 *
 * Created on September 14, 2005, 12:49 AM
 */

package myticket;

import java.awt.*;
import javax.swing.*;
import javax.swing.table.*;
import java.io.*;
import javax.swing.event.*;
import javax.swing.text.*;
import javax.swing.*;
import java.util.Date;
import java.text.*;
import key.Preferrences;

/**
 *
 * @author  sdperret
 */
public class JFrameSetup extends javax.swing.JFrame {
    
    private BookingSystem myTicket;
    private String[] performers;
    
    /** Creates new form JFrameSetup */
    public JFrameSetup( BookingSystem aBookingSystem ) {
        myTicket = aBookingSystem;
        
        System.out.println("----------------------- JFrameSetup -----------------------");
        
        
        try{
            myTicket.loadSetup( true );
        }catch( Exception e ){
            dispose();    
        }
        
        
        
        Performer p1;
        Show s1;
        Room r1;
        Performance perf1;
           
        if( myTicket.getPerformers().size() < 1 ){
            p1 = new Performer();
            myTicket.addPerformer( new Performer() );
        }else{
            p1 = myTicket.getPerformers().get(0);
        }
        
        if( myTicket.getShows().size() < 1 ){
            s1 = new Show( p1, "", "" );
            myTicket.addShow( s1 );
        }else{
            s1 = myTicket.getShows().get(0);
        }
        
        if( myTicket.getRooms().size() < 1 ){
            r1 = new Room();
            myTicket.addRoom( r1 );
        }else{
            r1 = myTicket.getRooms().get(0);
        }
        
        if( myTicket.getPerformances().size() < 1 ){
            perf1 = new Performance( new Date(), r1, s1, myTicket.getDataDirectory(), myTicket.getBackupDirectory(), 0, myTicket );
            myTicket.addPerformance( perf1 );
        }else{
            perf1 = myTicket.getPerformances().get(0);
        }
        
        
        initComponents();
        
        jCheckBox1.setSelected( key.Preferrences.showOldPerformances() );
        jCheckBoxTicketBackground.setSelected( key.Preferrences.printTicketBackground() );
        
    }
    
    //public JFrameSetup() {
        //myTicket = new BookingSystem( new File ( "/home/sdperret/" ) );  
        //myTicket.loadTest();
    //    initComponents();
    //}
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelSystem = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabelLicenseValidity = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxLanguage = new javax.swing.JComboBox();
        jSeparator15 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jSeparator16 = new javax.swing.JSeparator();
        jSeparator17 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jCheckBoxTicketBackground = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonMakeBackup = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jTextFieldBackupDirectory = new javax.swing.JTextField();
        jButtonBrowse1 = new javax.swing.JButton();
        jPanelSetupPerformers = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePerformers = new javax.swing.JTable();
        jPanelSetupShows = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableShows = new javax.swing.JTable();
        jPanelSetupRooms = new javax.swing.JPanel();
        jToolBar4 = new javax.swing.JToolBar();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jButton12 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableRooms = new javax.swing.JTable();
        jPanelSetupPerformances = new javax.swing.JPanel();
        jToolBar3 = new javax.swing.JToolBar();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButton9 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePerformances = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MyTicket Setup");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentShown(evt);
            }
        });

        jPanelSystem.setLayout(new javax.swing.BoxLayout(jPanelSystem, javax.swing.BoxLayout.Y_AXIS));

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelLicenseValidUntilM" ));
        jPanel2.add(jLabel10);

        SimpleDateFormat sf = new SimpleDateFormat("dd.MM.yyyy");
        String licenseValidityText = "";
        try{

            licenseValidityText = sf.format( Preferrences.getLicense().getDate() );
        }catch( Exception e ){
            System.out.println( e );
        }
        jLabelLicenseValidity.setText(licenseValidityText);
        jPanel2.add(jLabelLicenseValidity);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel6.add(jPanel2, gridBagConstraints);

        jSeparator12.setPreferredSize(new java.awt.Dimension(0, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel6.add(jSeparator12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        jPanel6.add(jSeparator7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.weightx = 0.1;
        jPanel6.add(jSeparator5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        jPanel6.add(jSeparator14, gridBagConstraints);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelOrganisationNameMDPSP" ));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jLabel2, gridBagConstraints);

        jTextFieldName.setText(myTicket.getName());
        jTextFieldName.getDocument().addDocumentListener(

            new DocumentListener(){
                public void insertUpdate( DocumentEvent event ){

                    Document a = event.getDocument();
                    try{
                        String t = a.getText(0, a.getLength() );
                        myTicket.setName( t );

                    } catch(  BadLocationException e ){

                    }
                }
                public void removeUpdate( DocumentEvent event ){

                    Document a = event.getDocument();
                    try{
                        String t = a.getText(0, a.getLength() );
                        myTicket.setName( t );

                    } catch(  BadLocationException e ){

                    }
                }
                public void changedUpdate( DocumentEvent event) {}

            }

        );
        jTextFieldName.setEnabled(false);
        jTextFieldName.setPreferredSize(new java.awt.Dimension(220, 19));
        jPanel6.add(jTextFieldName, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel6.add(jSeparator6, gridBagConstraints);

        jPanel6.add(jSeparator9, new java.awt.GridBagConstraints());

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelOrganisationEmailMDPSP" ));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jLabel3, gridBagConstraints);

        jTextFieldEmail.setText(myTicket.getEmail());
        jTextFieldEmail.getDocument().addDocumentListener(

            new DocumentListener(){
                public void insertUpdate( DocumentEvent event ){

                    Document a = event.getDocument();
                    try{
                        String t = a.getText(0, a.getLength() );
                        myTicket.setEmail( t );

                    } catch(  BadLocationException e ){

                    }
                }
                public void removeUpdate( DocumentEvent event ){

                    Document a = event.getDocument();
                    try{
                        String t = a.getText(0, a.getLength() );
                        myTicket.setEmail( t );

                    } catch(  BadLocationException e ){

                    }
                }
                public void changedUpdate( DocumentEvent event) {}

            }

        );
        jTextFieldEmail.setPreferredSize(new java.awt.Dimension(220, 19));
        jPanel6.add(jTextFieldEmail, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel6.add(jSeparator10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        jPanel6.add(jSeparator11, gridBagConstraints);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelLanguageMDPSP" ));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jLabel4, gridBagConstraints);

        jComboBoxLanguage.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Francais" }));
        jComboBoxLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLanguageActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jComboBoxLanguage, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel6.add(jSeparator15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        jPanel6.add(jSeparator13, gridBagConstraints);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jLabel6, gridBagConstraints);

        jCheckBox1.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("labelShowOldPerformances" ));
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jCheckBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanel6.add(jSeparator16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        jPanel6.add(jSeparator17, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jLabel7, gridBagConstraints);

        jCheckBoxTicketBackground.setSelected(true);
        jCheckBoxTicketBackground.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("labelPrintTicketBackgroundM" ));
        jCheckBoxTicketBackground.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTicketBackgroundActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jCheckBoxTicketBackground, gridBagConstraints);

        jPanelSystem.add(jPanel6);

        jPanel4.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("labelBackupM" )));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Bouboutel");
        jPanel4.add(jLabel1);

        jButtonMakeBackup.setText("Make Manual Backup ->");
        jButtonMakeBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMakeBackupActionPerformed(evt);
            }
        });

        jPanel4.add(jButtonMakeBackup);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.Y_AXIS));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Automatic Backup directory: ");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel5.setPreferredSize(new java.awt.Dimension(150, 15));
        jPanel5.add(jLabel5);

        jTextFieldBackupDirectory.setText(myTicket.getBackupDirectory().getPath());
        jTextFieldBackupDirectory.getDocument().addDocumentListener(

            new DocumentListener(){
                public void insertUpdate( DocumentEvent event ){
                    //System.out.println("SETTING BACKUP FILE");

                    Document a = event.getDocument();
                    try{
                        String t = a.getText(0, a.getLength() );
                        File aFile = new File( t );

                        if( aFile.getPath().equals( key.Preferrences.getDataDirectory().getPath() ) ){
                            jButtonMakeBackup.setEnabled( false );
                        }else{
                            key.Preferrences.setBackupDirectory( aFile );
                            jButtonMakeBackup.setEnabled( true );
                        }

                    } catch(  BadLocationException e ){
                        jTextFieldBackupDirectory.setText( "" );
                    }
                }
                public void removeUpdate( DocumentEvent event ){
                    //System.out.println("SETTING BACKUP FILE");
                    Document a = event.getDocument();
                    try{
                        String t = a.getText(0, a.getLength() );
                        File aFile = new File( t );

                        if( aFile.getPath().equals( key.Preferrences.getDataDirectory().getPath() ) ){
                            jButtonMakeBackup.setEnabled( false );
                        }else{
                            key.Preferrences.setBackupDirectory( aFile );
                            jButtonMakeBackup.setEnabled( true );
                        }

                    } catch(  BadLocationException e ){
                        jTextFieldBackupDirectory.setText( "" );
                    }
                }
                public void changedUpdate( DocumentEvent event) {}

            }

        );
        jTextFieldBackupDirectory.setMinimumSize(new java.awt.Dimension(120, 19));
        jTextFieldBackupDirectory.setPreferredSize(new java.awt.Dimension(250, 19));
        jPanel8.add(jTextFieldBackupDirectory);

        jButtonBrowse1.setText("...");
        jButtonBrowse1.setPreferredSize(new java.awt.Dimension(30, 19));
        jButtonBrowse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowse1ActionPerformed(evt);
            }
        });

        jPanel8.add(jButtonBrowse1);

        jPanel5.add(jPanel8);

        jPanel4.add(jPanel5);

        jPanelSystem.add(jPanel4);

        jTabbedPane1.addTab(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelSystem" ), jPanelSystem);

        jPanelSetupPerformers.setLayout(new javax.swing.BoxLayout(jPanelSetupPerformers, javax.swing.BoxLayout.Y_AXIS));

        jPanelSetupPerformers.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanelSetupPerformersComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelSetupPerformersComponentShown(evt);
            }
        });

        jToolBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonNew" ));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToolBar1.add(jButton1);

        jButton2.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonEdit" ));
        jButton2.setEnabled(false);
        jToolBar1.add(jButton2);

        jSeparator1.setPreferredSize(new java.awt.Dimension(20, 0));
        jToolBar1.add(jSeparator1);

        jButton3.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonDelete" ));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jToolBar1.add(jButton3);

        jPanelSetupPerformers.add(jToolBar1);

        jTablePerformers.setModel(myTicket.getPerformers());
        myTicket.getPerformers().addTableModelListener( this.jTablePerformers );
        jScrollPane1.setViewportView(jTablePerformers);

        jPanelSetupPerformers.add(jScrollPane1);

        jTabbedPane1.addTab(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelPerformers" ), jPanelSetupPerformers);

        jPanelSetupShows.setLayout(new javax.swing.BoxLayout(jPanelSetupShows, javax.swing.BoxLayout.Y_AXIS));

        jPanelSetupShows.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanelSetupShowsComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelSetupShowsComponentShown(evt);
            }
        });

        jToolBar2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonNew" ));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jToolBar2.add(jButton4);

        jButton5.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonEdit" ));
        jButton5.setEnabled(false);
        jToolBar2.add(jButton5);

        jSeparator2.setPreferredSize(new java.awt.Dimension(20, 0));
        jToolBar2.add(jSeparator2);

        jButton6.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonDelete" ));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jToolBar2.add(jButton6);

        jPanelSetupShows.add(jToolBar2);

        jTableShows.setModel(myTicket.getShows());
        performersCombo = new JComboBox();
        for( Performer e : myTicket.getPerformers() ){
            System.out.println( e );
            performersCombo.addItem( e );
        }

        TableColumnModel columnModel = jTableShows.getColumnModel();
        TableColumn performersColumn = columnModel.getColumn( 1 );
        performersColumn.setCellEditor( new DefaultCellEditor( performersCombo ) );

        myTicket.getPerformers().addTableModelListener( this.jTableShows );
        myTicket.getShows().addTableModelListener( this.jTableShows );
        jTableShows.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTableShowsComponentShown(evt);
            }
        });

        jScrollPane2.setViewportView(jTableShows);

        jPanelSetupShows.add(jScrollPane2);

        jTabbedPane1.addTab(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelShows" ), jPanelSetupShows);

        jPanelSetupRooms.setLayout(new javax.swing.BoxLayout(jPanelSetupRooms, javax.swing.BoxLayout.Y_AXIS));

        jPanelSetupRooms.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanelSetupRoomsComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelSetupRoomsComponentShown(evt);
            }
        });

        jToolBar4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton10.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonNew" ));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jToolBar4.add(jButton10);

        jButton11.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonEdit" ));
        jButton11.setEnabled(false);
        jToolBar4.add(jButton11);

        jSeparator4.setPreferredSize(new java.awt.Dimension(20, 0));
        jToolBar4.add(jSeparator4);

        jButton12.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonDelete" ));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jToolBar4.add(jButton12);

        jPanelSetupRooms.add(jToolBar4);

        jTableRooms.setModel(myTicket.getRooms());
        jScrollPane4.setViewportView(jTableRooms);

        jPanelSetupRooms.add(jScrollPane4);

        jTabbedPane1.addTab(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", myTicket.getLocale() ).getString("labelRoom" ), jPanelSetupRooms);

        jPanelSetupPerformances.setLayout(new javax.swing.BoxLayout(jPanelSetupPerformances, javax.swing.BoxLayout.Y_AXIS));

        jPanelSetupPerformances.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanelSetupPerformancesComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelSetupPerformancesComponentShown(evt);
            }
        });

        jToolBar3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton7.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonNew" ));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jToolBar3.add(jButton7);

        jButton8.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonEdit" ));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jToolBar3.add(jButton8);

        jSeparator3.setPreferredSize(new java.awt.Dimension(20, 0));
        jToolBar3.add(jSeparator3);

        jButton9.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonDelete" ));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jToolBar3.add(jButton9);

        jPanelSetupPerformances.add(jToolBar3);

        jTablePerformances.setModel(myTicket.getPerformances());
        jTablePerformances.getSelectionModel().setSelectionMode( ListSelectionModel.SINGLE_SELECTION );

        TableColumnModel columnModelPerformances = jTablePerformances.getColumnModel();
        //TableColumn performancesShowsColumn = columnModelPerformances.getColumn( 1 );
        //erformancesShowsColumn.setCellEditor( new DefaultCellEditor( performersCombo ) );

        showsCombo = new JComboBox();
        for( Show e : myTicket.getShows() ){
            System.out.println( "ADDING " + e + " TO COMBO");
            showsCombo.addItem( e );
        }

        TableColumn performancesShowsColumn = columnModelPerformances.getColumn( 0 );
        performancesShowsColumn.setCellEditor( new DefaultCellEditor( showsCombo ) );

        roomsCombo = new JComboBox();
        for( Room e : myTicket.getRooms() ){
            System.out.println( "ADDING " + e + " TO COMBO");
            roomsCombo.addItem( e );
        }

        TableColumn roomsShowsColumn = columnModelPerformances.getColumn( 2 );
        roomsShowsColumn.setCellEditor( new DefaultCellEditor( roomsCombo ) );

        myTicket.getShows().addTableModelListener( this.jTablePerformances );
        myTicket.getRooms().addTableModelListener( this.jTablePerformances );
        jTablePerformances.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePerformancesMouseClicked(evt);
            }
        });

        jScrollPane3.setViewportView(jTablePerformances);

        jPanelSetupPerformances.add(jScrollPane3);

        jTabbedPane1.addTab(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", myTicket.getLocale() ).getString("labelPerformances" ), jPanelSetupPerformances);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jPanel1.add(jButtonOK);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void jCheckBoxTicketBackgroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTicketBackgroundActionPerformed
// TODO add your handling code here:
        key.Preferrences.setPrintTicketBackground( jCheckBox1.isSelected() );
    }//GEN-LAST:event_jCheckBoxTicketBackgroundActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
// TODO add your handling code here:
        key.Preferrences.setShowOldPerformances( jCheckBox1.isSelected() );
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
// TODO add your handling code here:
        
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jButtonMakeBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMakeBackupActionPerformed
// TODO add your handling code here:
        try{
            myTicket.makeFullBackup();
        }catch( IOException e ){
            JOptionPane.showMessageDialog( null, "COULD NOT MAKE a BACKUP TO " + myTicket.getBackupDirectory().getPath() + "\n\n" + e, "System error", JOptionPane.OK_OPTION );
        }
        
    }//GEN-LAST:event_jButtonMakeBackupActionPerformed

    private void jButtonBrowse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowse1ActionPerformed
// TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory( key.Preferrences.getBackupDirectory() );
        chooser.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY );
        int result = chooser.showDialog( this, "Select" );
        if( result == JFileChooser.APPROVE_OPTION ){
            //key.Preferrences.setBackupDirectory( chooser.getSelectedFile() );
            System.out.println("SETTING BACKUP TEXTFIELD");
            jTextFieldBackupDirectory.setText( chooser.getSelectedFile().getPath() );
        }
        
    }//GEN-LAST:event_jButtonBrowse1ActionPerformed

    private void jComboBoxLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLanguageActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxLanguageActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
// TODO add your handling code here:
        
        key.Preferrences.setShowOldPerformances( jCheckBox1.isSelected() );
        key.Preferrences.setPrintTicketBackground( jCheckBoxTicketBackground.isSelected() );
        
        
        String t = jTextFieldBackupDirectory.getText();
        File aFile = new File( t );

        if( aFile.getPath().equals( key.Preferrences.getDataDirectory().getPath() ) ){
            JOptionPane.showMessageDialog( null, "Backup directory cannot be the same as the bouboutel local storage directory", "System error", JOptionPane.OK_OPTION );
        }else{
            try{
                myTicket.saveSetup();
                myTicket.savePreferrences();
            }catch( IOException e ){
                System.out.println( e );
                JOptionPane.showMessageDialog( null, "COULD NOT SAVE bouboutel.setup", "System error", JOptionPane.OK_OPTION );
            }
 
            
            // reload performances
            try{
                myTicket.loadSetup( key.Preferrences.showOldPerformances() );
            }catch( Exception e ){
                
            }
            myTicket.fireTableDataChanged();
            myTicket.getPerformances().fireTableDataChanged();
            
            dispose();
        }
        
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
// TODO add your handling code here:
        
        int selected = jTableRooms.getSelectedRow();
        
        if( selected > -1 ){
          myTicket.deleteRoom( selected );
        }
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
// TODO add your handling code here:
        int selected = jTableShows.getSelectedRow();
        
        if( selected > -1 ){
          myTicket.deleteShow( selected );
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
        int selected = jTablePerformers.getSelectedRow();
        
        if( selected > -1 ){
          myTicket.deletePerformer( selected );
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
// TODO add your handling code here:
       edit();
    }//GEN-LAST:event_jButton8ActionPerformed

    
    private void edit(){
        int selected = jTablePerformances.getSelectedRow();
        
        if( selected > -1 ){
        //if( myTicket.getPerformances().get(selected).getNbFreeSeats() > 0 ){ 

            Performance aPerformance = myTicket.getPerformances().get(selected);
            JDialogEditPerformance d = new JDialogEditPerformance( myTicket, aPerformance, false, this );
            d.setVisible( true );
        //}
        }
    }
    private void jTablePerformancesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePerformancesMouseClicked
// TODO add your handling code here:
        if ( evt.getClickCount() == 2){
           edit(); 
        }
    }//GEN-LAST:event_jTablePerformancesMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
// TODO add your handling code here:
        /*try{
            myTicket.save();
        }catch( IOException e ){
            System.out.println( e );
            JOptionPane.showMessageDialog( null, "COULD NOT SAVE SYSTEM.DATA", "System error", JOptionPane.OK_OPTION );
        }
        dispose();*/
    }//GEN-LAST:event_formWindowClosing

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
// TODO add your handling code here:
        int selected = jTablePerformances.getSelectedRow();
        
        if( selected > -1 ){
          myTicket.deletePerformance( selected );
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
// TODO add your handling code here:
        
        /*if( myTicket.getShows().getRowCount() > 0 && myTicket.getRooms().getRowCount() > 0 ){
            Show aShow = myTicket.getShows().get(0);
            Room aRoom = myTicket.getRooms().get(0);
       
            myTicket.addPerformance( new Performance( 0,0,0,0,0, aRoom, aShow, myTicket.getDataDirectory(), aRoom.getNbDefaultSeats() ) );
        }*/
        
        if( myTicket.getShows().getRowCount() > 0 && myTicket.getRooms().getRowCount() > 0 ){
            Show aShow = myTicket.getShows().get(0);
            Room aRoom = myTicket.getRooms().get(0);
            //JDialogEditPerformance toto = new JDialogEditPerformance( myTicket, new Performance( 0,0,0,0,0, aRoom, aShow, myTicket.getDataDirectory(), aRoom.getNbDefaultSeats() ), true );
            JDialogEditPerformance toto = new JDialogEditPerformance( myTicket, new Performance( new Date(), aRoom, aShow, myTicket.getDataDirectory(), myTicket.getBackupDirectory(), aRoom.getNbDefaultSeats(), myTicket ), true, this );
            
            toto.setVisible( true );
        }
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
        if( myTicket.getPerformers().getRowCount() == 0){
            myTicket.addPerformer( new Performer("", "", "", "", "", "" ) );
        }
        
        //if( myTicket.getPerformers().getRowCount() > 0){
            myTicket.addShow( new Show( myTicket.getPerformers().get(0), "", "" ) );
            //myTicket.addShow( (Performer)  );
        /*}else{
            myTicket.addShow( new Show( new Performer("", "", "", "", "", "" ), "", "" ) );
        }*/
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        myTicket.addPerformer( new Performer( "", "", "", "", "", "" ) );
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
// TODO add your handling code here:
       myTicket.addRoom( new Room( new Company( "", "", "", "", "", "" ), "" ) ); 
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jPanelSetupRoomsComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelSetupRoomsComponentHidden
// TODO add your handling code here:
        boolean[] a = {false, false, false, false};
        myTicket.getRooms().setEditableColumns( a );
    }//GEN-LAST:event_jPanelSetupRoomsComponentHidden

    private void jPanelSetupRoomsComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelSetupRoomsComponentShown
// TODO add your handling code here:
        boolean[] a = {true, true, true, true, true, true, true};
        myTicket.getRooms().setEditableColumns( a );
    }//GEN-LAST:event_jPanelSetupRoomsComponentShown

    private void jPanelSetupPerformancesComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelSetupPerformancesComponentHidden
// TODO add your handling code here:
        System.out.println("SETTING PERFORMERS EDITABLE");
        boolean[] a = {false, false, false, false };
        myTicket.getPerformances().setEditableColumns( a );
    }//GEN-LAST:event_jPanelSetupPerformancesComponentHidden

    private void jPanelSetupPerformancesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelSetupPerformancesComponentShown
// TODO add your handling code here:
        System.out.println("SETTING PERFORMERS EDITABLE");
        //boolean[] a = {true, true, true, true, false};
        //myTicket.getPerformances().setEditableColumns( a );
        
        showsCombo.removeAllItems();
        for( Show e : myTicket.getShows() ){
            System.out.println( "ADDING " + e + " TO COMBO");
            showsCombo.addItem( e );
        }
        TableColumnModel columnModelPerformances = jTablePerformances.getColumnModel();
        TableColumn performancesShowsColumn = columnModelPerformances.getColumn( 0 );
        performancesShowsColumn.setCellEditor( new DefaultCellEditor( showsCombo ) );

        roomsCombo.removeAllItems();
        for( Room e : myTicket.getRooms() ){
            System.out.println( "ADDING " + e + " TO COMBO");
            roomsCombo.addItem( e );
        }
        TableColumn performancesRoomsColumn = columnModelPerformances.getColumn( 2 );
        performancesRoomsColumn.setCellEditor( new DefaultCellEditor( roomsCombo ) );
        
       
        
    }//GEN-LAST:event_jPanelSetupPerformancesComponentShown

    private void jPanelSetupPerformersComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelSetupPerformersComponentHidden
// TODO add your handling code here:
        System.out.println("SETTING PERFORMERS UNEDITABLE");
        boolean[] a = {false, false, false, false, false};
        myTicket.getPerformers().setEditableColumns( a );
    }//GEN-LAST:event_jPanelSetupPerformersComponentHidden

    private void jPanelSetupPerformersComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelSetupPerformersComponentShown
// TODO add your handling code here:
        System.out.println("SETTING PERFORMERS EDITABLE");
        boolean[] a = {true, true, true, true, true};
        myTicket.getPerformers().setEditableColumns( a );
    }//GEN-LAST:event_jPanelSetupPerformersComponentShown

    private void jPanelSetupShowsComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelSetupShowsComponentHidden
// TODO add your handling code here:
        System.out.println("SETTING SHOWS UNEDITABLE");
        boolean[] a = {false, false};
        myTicket.getShows().setEditableColumns( a ); 
    }//GEN-LAST:event_jPanelSetupShowsComponentHidden

    private void jPanelSetupShowsComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelSetupShowsComponentShown
// TODO add your handling code here:
        System.out.println("SETTING SHOWS EDITABLE");
        boolean[] a = {true, true};
        myTicket.getShows().setEditableColumns( a );
        
        performersCombo.removeAllItems();
        for( Performer e : myTicket.getPerformers() ){
            System.out.println( "ADDING " + e + " TO COMBO");
            performersCombo.addItem( e );
        }
        TableColumnModel columnModelPerformances = jTablePerformances.getColumnModel();
        TableColumn performancesShowsColumn = columnModelPerformances.getColumn( 0 );
        performancesShowsColumn.setCellEditor( new DefaultCellEditor( showsCombo ) );
    }//GEN-LAST:event_jPanelSetupShowsComponentShown

    private void jTableShowsComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTableShowsComponentShown
// TODO add your handling code here:
        
        
    }//GEN-LAST:event_jTableShowsComponentShown

    private void jTabbedPane1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentShown
// TODO add your handling code here:
        
    }//GEN-LAST:event_jTabbedPane1ComponentShown
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                //JFrameSetup toto = new JFrameSetup();
                //toto.loadTest();
                //toto.setVisible( true );
                
                //new JFrameSetup().setVisible(true);
            }
        });
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonBrowse1;
    private javax.swing.JButton jButtonMakeBackup;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBoxTicketBackground;
    private javax.swing.JComboBox jComboBoxLanguage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelLicenseValidity;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelSetupPerformances;
    private javax.swing.JPanel jPanelSetupPerformers;
    private javax.swing.JPanel jPanelSetupRooms;
    private javax.swing.JPanel jPanelSetupShows;
    private javax.swing.JPanel jPanelSystem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTablePerformances;
    private javax.swing.JTable jTablePerformers;
    private javax.swing.JTable jTableRooms;
    private javax.swing.JTable jTableShows;
    private javax.swing.JTextField jTextFieldBackupDirectory;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    // End of variables declaration//GEN-END:variables
    
    private JComboBox showsCombo;
    private JComboBox performersCombo;
    private JComboBox roomsCombo;
}
