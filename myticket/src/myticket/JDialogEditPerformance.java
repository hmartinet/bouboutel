/*
 * JFrameEditPerformance.java
 *
 * Created on October 11, 2005, 7:52 AM
 */

package myticket;

import java.awt.event.*;
import java.util.*;
import javax.swing.*;
import java.awt.*;


import java.awt.*;
import javax.swing.*;
import javax.swing.table.*;
import java.io.*;
import javax.swing.event.*;
import javax.swing.text.*;
import javax.swing.*;
import java.util.Date;
import key.Preferrences;


/**
 *
 * @author  sdperret
 */
public class JDialogEditPerformance extends javax.swing.JDialog {
    
    /** Creates new form JFrameEditPerformance */
    public JDialogEditPerformance( BookingSystem aBookingSystem, Performance aPerformance, boolean aBool, JFrame parentFrame ) {
        
        super( parentFrame, true );
        
        myTicket = aBookingSystem;
        performance = aPerformance;
        newPerformance = aBool;
        
        if( newPerformance == true ){
            myTicket.addPerformance( performance );
        }else{
            /*try{
                performance.journalDeletePrices();
            }catch( IOException e ){
                dispose();
            }*/
        }
        
        performance.savePrices();
        
        if( performance.getPrices().size() == 0 ){
            performance.restoreDefaultPrices();
            try{
                performance.journalAddPrices();
            }catch( IOException e ){
            
            }
        }
        
        performance.cancelAllPrebookings();
        
        // we don't want to see the number of seats to order in this view

        // prevents bookings
        performance.setEditmode( true );
        
        
        // delete all prices
        /*try{
            performance.deletePrices();
        }catch( IOException a ){
            
        }*/
        
        
        
        System.out.println( performance + " now in editmode: " + performance.isBeingEdited() );
        
        initComponents();
        
        performance.getPrices().addTableModelListener( priceListener );
  
        System.out.println("JDialogEditPerformance:constructor with performance " + performance);
        
        System.out.println( Integer.toString( performance.getNbTotalSeats() ));
  
        // SET SHOW
        jComboBoxShow.setSelectedItem( performance.getShow().getTitle() );
        // SET ROOM
        jComboBoxRoom.setSelectedItem( performance.getRoom().getCompany().getName() );
        // SET SEATS
        jTextFieldNbSeats.setText( Integer.toString( performance.getNbTotalSeats() ) );
        
        // SET DATE
        Date da = performance.getDate();
        GregorianCalendar cal = new GregorianCalendar();
        cal.setTime( da );
        jCalendar.getCalendarModel().setDate( da );
        // SET TIME
        jTextFieldHours.setText( Integer.toString( cal.get(Calendar.HOUR_OF_DAY) ) );
        jTextFieldMinutes.setText( Integer.toString( cal.get(Calendar.MINUTE) ) );
           
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelNorth = new javax.swing.JPanel();
        jPanelCenter = new javax.swing.JPanel();
        jPanelShowRoom = new javax.swing.JPanel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jComboBoxShow = new javax.swing.JComboBox();
        jSeparator4 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jComboBoxRoom = new javax.swing.JComboBox();
        jSeparator9 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JSeparator();
        jPanelSeats = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNbSeats = new javax.swing.JTextField();
        jButtonDefaultSeatNumber = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanelDate = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jCalendar = new com.margaglione.calendar.JCalendar();
        jPanelTime = new javax.swing.JPanel();
        jTextFieldHours = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldMinutes = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jPanelTarifs = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButtonAddPrice = new javax.swing.JButton();
        jButtonDeletePrice = new javax.swing.JButton();
        jButtonImportPrices = new javax.swing.JButton();
        jButtonExportPrices = new javax.swing.JButton();
        jButtonRestoreDefaults = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanelSouth = new javax.swing.JPanel();
        jButtonCancel = new javax.swing.JButton();
        jButtonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Performance");
        getContentPane().add(jPanelNorth, java.awt.BorderLayout.NORTH);

        jPanelCenter.setLayout(new javax.swing.BoxLayout(jPanelCenter, javax.swing.BoxLayout.Y_AXIS));

        jPanelShowRoom.setLayout(new java.awt.GridBagLayout());

        jSeparator5.setPreferredSize(new java.awt.Dimension(10, 0));
        jPanelShowRoom.add(jSeparator5, new java.awt.GridBagConstraints());

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelShowMDPSP" ));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelShowRoom.add(jLabel1, gridBagConstraints);

        jSeparator3.setPreferredSize(new java.awt.Dimension(10, 0));
        jPanelShowRoom.add(jSeparator3, new java.awt.GridBagConstraints());

        jComboBoxShow.setFont(new java.awt.Font("Dialog", 0, 18));
        jComboBoxShow.setModel(myTicket.getShows());
        jComboBoxShow.setMinimumSize(new java.awt.Dimension(300, 24));
        jComboBoxShow.setPreferredSize(new java.awt.Dimension(300, 24));
        jComboBoxShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxShowActionPerformed(evt);
            }
        });

        jPanelShowRoom.add(jComboBoxShow, new java.awt.GridBagConstraints());

        jSeparator4.setPreferredSize(new java.awt.Dimension(10, 0));
        jPanelShowRoom.add(jSeparator4, new java.awt.GridBagConstraints());

        jButton1.setFont(new java.awt.Font("Dialog", 0, 10));
        jButton1.setText("add new");
        jButton1.setEnabled(false);
        jButton1.setPreferredSize(new java.awt.Dimension(58, 25));
        jPanelShowRoom.add(jButton1, new java.awt.GridBagConstraints());

        jSeparator11.setPreferredSize(new java.awt.Dimension(10, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanelShowRoom.add(jSeparator11, gridBagConstraints);

        jSeparator7.setPreferredSize(new java.awt.Dimension(10, 0));
        jPanelShowRoom.add(jSeparator7, new java.awt.GridBagConstraints());

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelRoomMDPSP" ));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelShowRoom.add(jLabel2, gridBagConstraints);

        jSeparator8.setPreferredSize(new java.awt.Dimension(10, 0));
        jPanelShowRoom.add(jSeparator8, new java.awt.GridBagConstraints());

        jComboBoxRoom.setFont(new java.awt.Font("Dialog", 0, 18));
        jComboBoxRoom.setModel((ComboBoxModel)myTicket.getRooms());
        jComboBoxRoom.setMinimumSize(new java.awt.Dimension(300, 24));
        jComboBoxRoom.setPreferredSize(new java.awt.Dimension(300, 24));
        jComboBoxRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRoomActionPerformed(evt);
            }
        });

        jPanelShowRoom.add(jComboBoxRoom, new java.awt.GridBagConstraints());

        jSeparator9.setPreferredSize(new java.awt.Dimension(10, 0));
        jPanelShowRoom.add(jSeparator9, new java.awt.GridBagConstraints());

        jButton2.setFont(new java.awt.Font("Dialog", 0, 10));
        jButton2.setText("add new");
        jButton2.setEnabled(false);
        jPanelShowRoom.add(jButton2, new java.awt.GridBagConstraints());

        jSeparator10.setPreferredSize(new java.awt.Dimension(10, 0));
        jPanelShowRoom.add(jSeparator10, new java.awt.GridBagConstraints());

        jPanelCenter.add(jPanelShowRoom);

        jPanelSeats.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel3.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelTotalNbSeatsM" ));
        jPanelSeats.add(jLabel3);

        jTextFieldNbSeats.setFont(new java.awt.Font("Dialog", 0, 18));
        jTextFieldNbSeats.setMinimumSize(new java.awt.Dimension(80, 23));
        jTextFieldNbSeats.setPreferredSize(new java.awt.Dimension(80, 23));
        jTextFieldNbSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNbSeatsActionPerformed(evt);
            }
        });
        jTextFieldNbSeats.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNbSeatsKeyPressed(evt);
            }
        });

        jPanelSeats.add(jTextFieldNbSeats);

        jButtonDefaultSeatNumber.setFont(new java.awt.Font("Dialog", 0, 10));
        jButtonDefaultSeatNumber.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonDefault" ));
        jButtonDefaultSeatNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefaultSeatNumberActionPerformed(evt);
            }
        });

        jPanelSeats.add(jButtonDefaultSeatNumber);

        jPanelCenter.add(jPanelSeats);

        jPanel1.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelDateM" ), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18)));
        jPanel1.setPreferredSize(new java.awt.Dimension(236, 220));
        jPanelDate.setLayout(new javax.swing.BoxLayout(jPanelDate, javax.swing.BoxLayout.Y_AXIS));

        jPanelDate.setBorder(new javax.swing.border.EtchedBorder());
        jLabel4.setText("Date:");
        jLabel4.setAlignmentX(0.5F);
        jPanelDate.add(jLabel4);

        jCalendar.setShowTime(false);
        jCalendar.setMaximumSize(new java.awt.Dimension(212, 167));
        jCalendar.setMinimumSize(new java.awt.Dimension(212, 167));
        jPanelDate.add(jCalendar);

        jPanel1.add(jPanelDate);

        jPanelCenter.add(jPanel1);

        jPanelTime.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelTimeM" ), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18)));
        jPanelTime.setPreferredSize(new java.awt.Dimension(155, 55));
        jTextFieldHours.setFont(new java.awt.Font("Dialog", 0, 18));
        jTextFieldHours.setText("00");
        jTextFieldHours.setMinimumSize(new java.awt.Dimension(30, 23));
        jTextFieldHours.setPreferredSize(new java.awt.Dimension(30, 23));
        jTextFieldHours.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldHoursKeyPressed(evt);
            }
        });

        jPanelTime.add(jTextFieldHours);

        jLabel6.setText(":");
        jPanelTime.add(jLabel6);

        jTextFieldMinutes.setFont(new java.awt.Font("Dialog", 0, 18));
        jTextFieldMinutes.setText("00");
        jTextFieldMinutes.setMinimumSize(new java.awt.Dimension(30, 23));
        jTextFieldMinutes.setPreferredSize(new java.awt.Dimension(30, 23));
        jTextFieldMinutes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldMinutesKeyPressed(evt);
            }
        });

        jPanelTime.add(jTextFieldMinutes);

        jPanelTime.add(jSeparator1);

        jPanelTime.add(jSeparator2);

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 10));
        jLabel7.setText("(HH : MM)");
        jPanelTime.add(jLabel7);

        jPanelCenter.add(jPanelTime);

        jPanelTarifs.setLayout(new javax.swing.BoxLayout(jPanelTarifs, javax.swing.BoxLayout.Y_AXIS));

        jPanelTarifs.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("labelPricesM" ), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18)));
        jPanelTarifs.setMaximumSize(new java.awt.Dimension(32777, 250));
        jPanelTarifs.setPreferredSize(new java.awt.Dimension(457, 250));
        jButtonAddPrice.setFont(new java.awt.Font("Dialog", 0, 10));
        jButtonAddPrice.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonNew" ));
        jButtonAddPrice.setPreferredSize(new java.awt.Dimension(75, 15));
        jButtonAddPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPriceActionPerformed(evt);
            }
        });

        jPanel3.add(jButtonAddPrice);

        jButtonDeletePrice.setFont(new java.awt.Font("Dialog", 0, 10));
        jButtonDeletePrice.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonDelete" ));
        jButtonDeletePrice.setPreferredSize(new java.awt.Dimension(75, 15));
        jButtonDeletePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletePriceActionPerformed(evt);
            }
        });

        jPanel3.add(jButtonDeletePrice);

        jButtonImportPrices.setFont(new java.awt.Font("Dialog", 0, 10));
        jButtonImportPrices.setText("import");
        jButtonImportPrices.setEnabled(false);
        jButtonImportPrices.setPreferredSize(new java.awt.Dimension(67, 15));
        jPanel3.add(jButtonImportPrices);

        jButtonExportPrices.setFont(new java.awt.Font("Dialog", 0, 10));
        jButtonExportPrices.setText("export");
        jButtonExportPrices.setEnabled(false);
        jButtonExportPrices.setPreferredSize(new java.awt.Dimension(70, 15));
        jButtonExportPrices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportPricesActionPerformed(evt);
            }
        });

        jPanel3.add(jButtonExportPrices);

        jButtonRestoreDefaults.setFont(new java.awt.Font("Dialog", 0, 10));
        jButtonRestoreDefaults.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonDefault" ));
        jButtonRestoreDefaults.setPreferredSize(new java.awt.Dimension(70, 15));
        jButtonRestoreDefaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRestoreDefaultsActionPerformed(evt);
            }
        });

        jPanel3.add(jButtonRestoreDefaults);

        jPanelTarifs.add(jPanel3);

        jScrollPane1.setMaximumSize(new java.awt.Dimension(32000, 303));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(800, 303));
        jTable1.setModel(performance.getPrices());
        actionsCombo = new JComboBox();
        actionsCombo.addItem( "Reservation" );
        actionsCombo.addItem( "Billet" );

        TableColumnModel columnModel = jTable1.getColumnModel();
        TableColumn actionColumn = columnModel.getColumn( 0 );
        actionColumn.setCellEditor( new DefaultCellEditor( actionsCombo ) );

        performance.getPrices().addTableModelListener( this.jTable1 );
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        jPanelTarifs.add(jScrollPane1);

        jPanelCenter.add(jPanelTarifs);

        getContentPane().add(jPanelCenter, java.awt.BorderLayout.CENTER);

        jButtonCancel.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("buttonCancel" ));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jPanelSouth.add(jButtonCancel);

        jButtonOK.setText(java.util.ResourceBundle.getBundle("myticket/BundleMyTicket").getString("buttonOK"));
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jPanelSouth.add(jButtonOK);

        getContentPane().add(jPanelSouth, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void jButtonRestoreDefaultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRestoreDefaultsActionPerformed
// TODO add your handling code here:
        performance.restoreDefaultPrices();
    }//GEN-LAST:event_jButtonRestoreDefaultsActionPerformed

    private void jButtonExportPricesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExportPricesActionPerformed
// TODO add your handling code here:
        
    }//GEN-LAST:event_jButtonExportPricesActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonDeletePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletePriceActionPerformed
// TODO add your handling code here:
        
        if( performance.getPrices().size() > 1 ){
            int selected[] = jTable1.getSelectedRows();
            if( selected.length > 0 ){
                for( int i = 0 ; i< selected.length; i++){
                    System.out.println("removing price: " + performance.getPrices().get( selected[0] ));
                
                    try{
                        if( performance.getPrices().size() > 1 ){
                            performance.deletePrice( selected[0] );
                        }
                        /*performance.getPrices().remove(selected);
                        performance.getPrices().fireTableDataChanged();*/
                    }catch( IOException e ){
                        System.out.println( "Could not delete price in performance " + performance );
                        
                    }
                }
                
            }else{
            
            }
        }
    }//GEN-LAST:event_jButtonDeletePriceActionPerformed

    private void jButtonAddPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPriceActionPerformed
// TODO add your handling code here:
        Price p = new Price();
        p.setEditmode( true );
        try{
            performance.addPrice( p );
        }catch( IOException e ){
            JOptionPane.showMessageDialog( null, "Could not write new price to file", "File error", JOptionPane.OK_OPTION );
        }
    }//GEN-LAST:event_jButtonAddPriceActionPerformed

    private void jComboBoxShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxShowActionPerformed
// TODO add your handling code here:
        /*JComboBox cb = (JComboBox)evt.getSource();
        int i = cb.getSelectedIndex();
        Show a = myTicket.getShows().get(i);
        
        System.out.println("updating show " + i + ": " + a);
        
        performance.setShow( a );*/
    }//GEN-LAST:event_jComboBoxShowActionPerformed

    private void jComboBoxRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRoomActionPerformed
// TODO add your handling code here:
        JComboBox cb = (JComboBox)evt.getSource();
        int i = cb.getSelectedIndex();
        Room a = myTicket.getRooms().get(i);
        //performance.setRoom( a );
        //jTextFieldNbSeats.setText( Integer.toString( a.getNbDefaultSeats() ) );*/
        //Room aR = myTicket.getRooms().get( jComboBoxRoom.getSelectedIndex() );
        jTextFieldNbSeats.setText( Integer.toString( a.getNbDefaultSeats() ) );
    }//GEN-LAST:event_jComboBoxRoomActionPerformed

    private void jButtonDefaultSeatNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefaultSeatNumberActionPerformed
// TODO add your handling code here:
        Room aR = myTicket.getRooms().get( jComboBoxRoom.getSelectedIndex() );
        jTextFieldNbSeats.setText( Integer.toString( aR.getNbDefaultSeats() ) );
    }//GEN-LAST:event_jButtonDefaultSeatNumberActionPerformed

    private void jTextFieldNbSeatsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNbSeatsKeyPressed
// TODO add your handling code here:
      char c = evt.getKeyChar();      
      if (!((Character.isDigit(c) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) )) {
        getToolkit().beep();
        evt.consume();
        jTextFieldNbSeats.setText( Integer.toString( performance.getRoom().getNbDefaultSeats() ) );
      }
    }//GEN-LAST:event_jTextFieldNbSeatsKeyPressed

    private void jTextFieldNbSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNbSeatsActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNbSeatsActionPerformed

    private void jTextFieldMinutesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMinutesKeyPressed
// TODO add your handling code here:
      char c = evt.getKeyChar();      
      if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) )) {
        getToolkit().beep();
        evt.consume();
        jTextFieldMinutes.setText("");
      }
    }//GEN-LAST:event_jTextFieldMinutesKeyPressed

    private void jTextFieldHoursKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldHoursKeyPressed
// TODO add your handling code here:
      char c = evt.getKeyChar();      
      if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) )) {
        getToolkit().beep();
        evt.consume();
        jTextFieldHours.setText("");
      }
      
    }//GEN-LAST:event_jTextFieldHoursKeyPressed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
// TODO add your handling code here:

        if( priceListener.hasChanged() ){
        
            try{
                performance.journalDeleteOldPrices();
            }catch( IOException e ){
                JOptionPane.showMessageDialog( null, "could not save new setup", "System setup error", JOptionPane.OK_OPTION );
            }
        
            // SETTING TARIFS
            try{
                performance.journalAddPrices();
            }catch( IOException e ){
            
            }
        }
       
        
        // SETTING DATE
            
        try{
            int hour = new Integer( jTextFieldHours.getText() );
            if( hour < 0 || hour > 25 ){
                String message = "Error, hour should be a number between 0 and 24";
                JOptionPane.showMessageDialog( null, message, "Booking error", JOptionPane.OK_OPTION );
                return;
            }
            
            try{
                int minute = new Integer( jTextFieldMinutes.getText() );
            
                if( minute < 0 || minute > 59 ){
                    String message = "Error, minute should be a number between 0 and 59";
                    JOptionPane.showMessageDialog( null, message, "Booking error", JOptionPane.OK_OPTION );
                    return;
                }  
                
                Date aDate = jCalendar.getCalendarModel().getDate();
        
                Calendar aCalendar = new GregorianCalendar();
                aCalendar.setTime( aDate );
        
                aCalendar.set( 	Calendar.HOUR_OF_DAY, hour );
                aCalendar.set( 	Calendar.MINUTE, minute );
                aCalendar.set( 	Calendar.SECOND, 0 );
                
                try{
                    performance.setDate( aCalendar.getTime() );
                }catch( java.io.IOException e ){
                    System.out.println("error setting date");
                }
            
            }catch( NumberFormatException ne ){
                String message = "Error, minute should be a number between 0 and 50";
                JOptionPane.showMessageDialog( null, message, "Booking error", JOptionPane.OK_OPTION );
                return;
            }
            
            
         }catch( NumberFormatException ne ){
            String message = "Error, hour should be a number between 0 and 24";
            JOptionPane.showMessageDialog( null, message, "Booking error", JOptionPane.OK_OPTION );
            return;
         }
        
            
        
        // SETTING SEATS
        
        try{
            int n = new Integer( jTextFieldNbSeats.getText().trim() );
            
            try{
                performance.setNbTotalSeats( n );
            }catch( java.io.IOException e ){
                System.out.println("error setting the nbTotalSeats");
            }       
        }catch( NumberFormatException ne ){
            String message = "Error, nb seats should be a number";
            JOptionPane.showMessageDialog( null, message, "Booking error", JOptionPane.OK_OPTION );
            return;
        }
        
        
        
        // SET SHOW
        int i = jComboBoxShow.getSelectedIndex();
        Show aS = myTicket.getShows().get(i);
        try{
            performance.setShow( aS );
        }catch( java.io.IOException e ){
            System.out.println("error setting the show");
        }
        
        // SET ROOM
        
        i = jComboBoxRoom.getSelectedIndex();
        Room aR = myTicket.getRooms().get(i);
        try{
            performance.setRoom( aR );
        }catch( java.io.IOException e ){
            System.out.println("error setting the room");
        }
        //jTextFieldNbSeats.setText( Integer.toString( a.getNbDefaultSeats() ) );
        //jTextFieldNbSeats.setText( Integer.toString( performance.getRoom().getNbDefaultSeats() ) );
        
        performance.setEditmode( false );
        
        myTicket.getPerformances().fireTableDataChanged();
        
        dispose();
        
        
        
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
// TODO add your handling code here:
        /*try{
            performance.journalAddPrices();
        }catch( IOException e ){
            
        }*/
        
        performance.restoreOldPrices();
        
        performance.setEditmode( false );
        if( newPerformance == true ){
            try{
                myTicket.deletePerformance( performance );
            }catch( PerformanceNotFoundException e ){
                
            }
        }
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed
    
    
    
    /*private void edit(){
        int selected = jTable1.getSelectedRow();
        
        if( selected > -1 ){

            Performance aPerformance = myTicket.getPerformances().get(selected);
            JDialogEditPerformance d = new JDialogEditPerformance( myTicket, aPerformance, false );
            d.setVisible( true );
        //}
        }
    }*/
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new JDialogEditPerformance().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAddPrice;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDefaultSeatNumber;
    private javax.swing.JButton jButtonDeletePrice;
    private javax.swing.JButton jButtonExportPrices;
    private javax.swing.JButton jButtonImportPrices;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonRestoreDefaults;
    private com.margaglione.calendar.JCalendar jCalendar;
    private javax.swing.JComboBox jComboBoxRoom;
    private javax.swing.JComboBox jComboBoxShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JPanel jPanelDate;
    private javax.swing.JPanel jPanelNorth;
    private javax.swing.JPanel jPanelSeats;
    private javax.swing.JPanel jPanelShowRoom;
    private javax.swing.JPanel jPanelSouth;
    private javax.swing.JPanel jPanelTarifs;
    private javax.swing.JPanel jPanelTime;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldHours;
    private javax.swing.JTextField jTextFieldMinutes;
    private javax.swing.JTextField jTextFieldNbSeats;
    // End of variables declaration//GEN-END:variables
 
    private BookingSystem myTicket;
    private Performance performance;
    
    private boolean newPerformance;
    
    private JComboBox actionsCombo;
    
    private PriceListener priceListener = new PriceListener();
}


class PriceListener implements TableModelListener {
    private boolean flagHasChanged = false;
    
    public void tableChanged(TableModelEvent e) {
        flagHasChanged = true;
    }
    
    public boolean hasChanged(){
        return flagHasChanged;
    }
}
