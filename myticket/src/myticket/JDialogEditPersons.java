/*
 * JDialogEditPersons.java
 *
 * Created on October 31, 2005, 11:45 AM
 */

package myticket;

import java.io.*;
import java.util.*;
import javax.swing.*;
import java.text.*;
import java.awt.*;

/**
 *
 * @author  sdperret
 */
public class JDialogEditPersons extends javax.swing.JDialog {
    
    /** Creates new form JDialogEditPersons */
    public JDialogEditPersons( BookingSystem aBookingSystem, JFrame parent ) {
        super( parent, true );
        
        myTicket = aBookingSystem; 
        
        anInit();
        
        initComponents();   

        jTableBookings.getColumnModel().getColumn(0).setPreferredWidth(160);
        jTableBookings.getColumnModel().getColumn(1).setPreferredWidth(40);
        jTableBookings.getColumnModel().getColumn(4).setPreferredWidth(120);
        jTableBookings.getColumnModel().getColumn(5).setPreferredWidth(120);
        
        jTableBookings.moveColumn(4,2);
        jTableBookings.moveColumn(5,3);
        
        jTableBookings.setIntercellSpacing( new Dimension( 5, 0 ) );
        
        
        
        sorter.setColumnComparator( Integer.class, TableSorter.NUMERICAL_COMPARATOR );
        sorter.setColumnComparator( Long.class, TableSorter.NUMERICAL_COMPARATOR );
        sorter.setColumnComparator( Double.class, TableSorter.NUMERICAL_COMPARATOR );
        sorter.setColumnComparator( Integer.class, TableSorter.NUMERICAL_COMPARATOR );
        sorter.setColumnComparator( SimpleDateFormat.class, TableSorter.SIMPLEDATE_COMPARATOR );
        
        
        
        
        
        sorter.addTableModelListener( jTableBookings );
        sorter.setSortingStatus( 0, TableSorter.ASCENDING);
        
        
        
        
    }
    
    
    public void anInit(){
        

        for( Performance performance: myTicket.getPerformances() ){;
            try{
                performance.loadBookingsTicketsInMemory();
                // add bookings to the table
                bookings.addAll( performance.getBookings() );
            }catch( IOException e1 ){
            
            }
        }
        
        for( Booking b:bookings ){
            b.setColumnCount( 6 );
        }
        
        
        
        /*System.out.println("JDialogEditPersons:anInit()  " + bookings.get(0).getColumnCount() );
        System.out.println("JDialogEditPersons:anInit()  " + bookings.get(0).getColumn(0) );
        System.out.println("JDialogEditPersons:anInit()  " + bookings.get(0).getColumn(1) );
        System.out.println("JDialogEditPersons:anInit()  " + bookings.get(0).getColumn(2) );
        System.out.println("JDialogEditPersons:anInit()  " + bookings.get(0).getColumn(3) );*/

               
    }    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jScrollPaneBookings = new javax.swing.JScrollPane();
        jTableBookings = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButtonEditBooking = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonDeleteBooking = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonMakeTickets = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("labelAllBookings" ));
        jScrollPaneBookings.setBackground(new java.awt.Color(255, 204, 204));
        jScrollPaneBookings.setPreferredSize(new java.awt.Dimension(800, 403));
        sorter = new TableSorter( bookings ); //ADDED THIS
        //JTable table = new JTable(new MyTableModel());          //OLD
        sorter.setTableHeader(jTableBookings.getTableHeader()); //ADDED THIS
        jTableBookings.setModel(sorter);
        jTableBookings.getSelectionModel().setSelectionMode( ListSelectionModel.SINGLE_SELECTION );
        jTableBookings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBookingsMouseClicked(evt);
            }
        });

        jScrollPaneBookings.setViewportView(jTableBookings);

        jPanel1.add(jScrollPaneBookings);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jButtonEditBooking.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("buttonEdit" ));
        jButtonEditBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditBookingActionPerformed(evt);
            }
        });

        jPanel2.add(jButtonEditBooking);

        jSeparator2.setPreferredSize(new java.awt.Dimension(100, 0));
        jPanel2.add(jSeparator2);

        jButtonDeleteBooking.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("buttonDelete" ));
        jButtonDeleteBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteBookingActionPerformed(evt);
            }
        });

        jPanel2.add(jButtonDeleteBooking);

        jSeparator1.setPreferredSize(new java.awt.Dimension(300, 0));
        jPanel2.add(jSeparator1);

        jButtonMakeTickets.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("buttonMakeTickets" ));
        jButtonMakeTickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMakeTicketsActionPerformed(evt);
            }
        });

        jPanel2.add(jButtonMakeTickets);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jButtonOK.setText(java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("buttonOK" ));
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jPanel3.add(jButtonOK);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void jTableBookingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBookingsMouseClicked
// TODO add your handling code here:
        
        if ( evt.getClickCount() == 2){
            makeTickets();
        }
        
    }//GEN-LAST:event_jTableBookingsMouseClicked

    private void jButtonEditBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditBookingActionPerformed
// TODO add your handling code here:
        
        /*if( performance.isReadOnly() ){
            java.awt.Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog( null, 
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("messageReadOnly"),
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("errorBookingM"), 
                    JOptionPane.OK_OPTION );
            return;
        }*/
        
        int sortedSelected = jTableBookings.getSelectedRow();

        if( sortedSelected > -1 ){  
            int selected = sorter.modelIndex( sortedSelected );
             
            Booking aBooking = bookings.get(selected);
            
            if( aBooking.getPerformance().isReadOnly() ){
                    java.awt.Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog( null, 
                        java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("messageReadOnly"),
                        java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("errorBookingM"), 
                        JOptionPane.OK_OPTION );
                    return;
            } 
            
            
            JDialogEditBooking toto = new JDialogEditBooking( aBooking, myTicket, this );
            toto.setVisible( true );
            
        }else{
            java.awt.Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog( null, 
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("messageSelectBooking"),
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("errorBookingM"), 
                    JOptionPane.OK_OPTION );
        }
        
        bookings.fireTableDataChanged();

    }//GEN-LAST:event_jButtonEditBookingActionPerformed

    private void jButtonDeleteBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteBookingActionPerformed
// TODO add your handling code here:
        
        /*if( performance.isReadOnly() ){
            java.awt.Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog( null, 
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("messageReadOnly"),
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", Preferrences.getLocale() ).getString("errorBookingM"), 
                    JOptionPane.OK_OPTION );
            return;
        } */
        
       //int sortedSelectedArray[] = jTableBookings.getSelectedRows();
       int sortedSelected = jTableBookings.getSelectedRow();

       if( sortedSelected > -1 ){  
           
            //for( int i = 0 ; i < sortedSelectedArray.length; i++){
           
                int selected = sorter.modelIndex( sortedSelected );  //sortedSelected );
                Booking aBooking = bookings.get( selected );
            
                if( aBooking.getPerformance().isReadOnly() ){
                    java.awt.Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog( null, 
                        java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("messageReadOnly"),
                        java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("errorBookingM"), 
                        JOptionPane.OK_OPTION );
                    return;
                } 
                try{
                    //aBooking.getPerformance().cancelBooking( aBooking );
                    aBooking.getPerformance().cancelBooking( aBooking );
                    //performance.getBookings().remove( aBooking );
         
                    bookings.remove( aBooking );
 
                }catch( java.io.IOException e ){
                    java.awt.Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(null,"Could not cancel booking for " + aBooking.getClient().getName(), "System error",JOptionPane.ERROR_MESSAGE);
                }
            //}
       }else{
           java.awt.Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog( null, 
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("messageSelectBooking"),
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("errorBookingM"), 
                    JOptionPane.OK_OPTION );
       }
       myTicket.getPerformances().fireTableDataChanged();
       bookings.fireTableDataChanged();
        
        
        
    }//GEN-LAST:event_jButtonDeleteBookingActionPerformed

    private void jButtonMakeTicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMakeTicketsActionPerformed
// TODO add your handling code here:
        
        makeTickets();
  
    }//GEN-LAST:event_jButtonMakeTicketsActionPerformed

    
    private void makeTickets(){
        //int sortedSelectedArray[] = jTableBookings.getSelectedRows();
       int sortedSelected = jTableBookings.getSelectedRow();

       if( sortedSelected > -1 ){  
           
       //for( int i = 0 ; i < sortedSelectedArray.length; i++){
           
            int selected = sorter.modelIndex( sortedSelected );
            Booking aBooking = bookings.get( selected );
            
            Performance performance = aBooking.getPerformance();

            if( performance.isBeingEdited() ){
                java.awt.Toolkit.getDefaultToolkit().beep();
                //JOptionPane.showMessageDialog( null, "This performance is actually being edited and thus cannot accept bookings now", "Booking error", JOptionPane.OK_OPTION );
                JOptionPane.showMessageDialog( null, 
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("messageReadOnly"),
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("errorBookingM"), 
                    JOptionPane.OK_OPTION );
                return;
            }else{
                try{
                    aBooking.convertBookingToPrebooking();
                    
                    myTicket.getPerformances().fireTableDataChanged();
                    performance.getBookings().fireTableDataChanged();
                    bookings.fireTableDataChanged();
                    
                    
                    /*myTicket.getPerformances().fireTableDataChanged();
                    performance.getBookings().fireTableDataChanged();*/
                    
                    JDialogBooking toto = new JDialogBooking( this, aBooking, myTicket, false );
                    toto.setVisible( true );
                    
                    if( !aBooking.hasBookings() && toto.flagOK == true ){
                        bookings.remove( aBooking );
                    }
                    toto.dispose();
                    
                }catch( IOException e ){
                    java.awt.Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog( null, "Could not cancel booking on file", "Booking error", JOptionPane.OK_OPTION );
                }
                
            }
        
        //}
       }else{
           java.awt.Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog( null, 
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("messageSelectBooking"),
                    java.util.ResourceBundle.getBundle( "myticket/BundleMyTicket", key.Preferrences.getLocale() ).getString("errorBookingM"), 
                    JOptionPane.OK_OPTION );
        }
        
    }
    
    
    
    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
// TODO add your handling code here:
         
        for( Performance performance: myTicket.getPerformances() ){;
            performance.clearBookingsFromMemory();
            performance.clearTicketsFromMemory();
        }
        
        bookings.clear();
        
        dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed
    
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JDialogEditPersons().setVisible(true);
            }
        });
    }*/
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeleteBooking;
    private javax.swing.JButton jButtonEditBooking;
    private javax.swing.JButton jButtonMakeTickets;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPaneBookings;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTableBookings;
    // End of variables declaration//GEN-END:variables
 
    private ShowableArrayList<Booking> bookings = new ShowableArrayList<Booking>();
    private BookingSystem myTicket = null;
    private TableSorter sorter = null;
    
}
